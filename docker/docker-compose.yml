services:

  reverse-proxy:
    image: traefik:v2.10
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
      # Mounting the certificate and the key
      - ./certificate:/etc/traefik/certificates
      ## Mouting the treafik configuration file
      - ./traefik.yaml:/etc/traefik/traefik.yaml
    ports:
      # the http port
      - "8000:80"
      # the https port
      - "443:443"
      # Traefik dashboard
      - "8080:8080"

  web:
    # When a build subsection is present for a service, Compose ignores the image attribute for the corresponding
    # service, as Compose can build an image from source
    build:
      # context specifies where to find the necessary files to build the image
      context: nginx
      # dockerfile specifies the name of the Dockerfile that contains the steps to build the image within
      # the defined context
      dockerfile: Dockerfile
    deploy:
      replicas: 2
    labels:
        - "traefik.http.services.web.loadbalancer.server.port=80"
        - "traefik.http.routers.secureweb.tls=true"
        - "traefik.http.routers.secureweb.rule=Host(`localhost`) && !PathPrefix(`/api`)"
        - "traefik.http.routers.secureweb.entrypoints=https"
        - "traefik.http.routers.web.rule=Host(`localhost`) && !PathPrefix(`/api`)"
        - "traefik.http.routers.web.entrypoints=http"

  api:
    build:
      context: api
      dockerfile: Dockerfile
    deploy:
      replicas: 2
    labels:
        - "traefik.http.services.api.loadbalancer.server.port=7000"
        - "traefik.http.routers.secureapi.tls=true"
        - "traefik.http.routers.api.rule=Host(`localhost`) && PathPrefix(`/api`)"
        - "traefik.http.routers.api.entrypoints=http"
        - "traefik.http.routers.secureapi.rule=Host(`localhost`) && PathPrefix(`/api`)"
        - "traefik.http.routers.secureapi.entrypoints=https"
        - "traefik.http.services.api.loadBalancer.sticky.cookie=true"
        - "traefik.http.services.api.loadBalancer.sticky.cookie.name=api-cookie"
          
  portainer:
    image: portainer/portainer-ce
    command: -H unix:///var/run/docker.sock # specifying the Docker socket path
    ports:
      # port to access portainer web interface with http
      - "9000:9000"
      # port to access portainer web interface with https
      - "9443:9443"
    volumes:
        # Mount the Docker socket from the host into the container
        - /var/run/docker.sock:/var/run/docker.sock
        - portainer_data:/data
        # Mount the directory containing SSL/TLS certificates
        - ./certificate:/certs

volumes:
  portainer_data:
